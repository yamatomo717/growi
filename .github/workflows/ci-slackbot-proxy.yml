name: Node CI for slackbot-proxy

on:
  push:
    branches-ignore:
      - release/**
      - rc/**
      - chore/**
      - support/prepare-v**

jobs:

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3.1.0

    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: '**/yarn.lock'

    - name: lerna bootstrap
      run: |
        npx lerna bootstrap
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0

    - name: yarn lint
      run: |
        yarn lerna run lint --scope @growi/slack --scope @growi/slackbot-proxy
    - name: yarn test
      run: |
        yarn lerna run test --scope @growi/slack --scope @growi/slackbot-proxy

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*Node CI for growi-bot-proxy - test (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  launch-dev:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306
        options: --health-cmd "mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 3
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: growi-slackbot-proxy

    steps:
    - uses: actions/checkout@v3.1.0

    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: '**/yarn.lock'

    - name: lerna bootstrap
      run: |
        npx lerna bootstrap
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0

    - name: yarn dev:ci
      working-directory: ./packages/slackbot-proxy
      run: |
        cp config/ci/.env.local.for-ci .env.development.local
        yarn dev:ci
      env:
        SERVER_URI: http://localhost:8080
        TYPEORM_CONNECTION: mysql
        TYPEORM_HOST: localhost
        TYPEORM_PORT: ${{ job.services.mysql.ports[3306] }}
        TYPEORM_DATABASE: growi-slackbot-proxy
        TYPEORM_USERNAME: root
        TYPEORM_PASSWORD:

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*Node CI for growi-bot-proxy - launch-dev (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}


  launch-prod:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306
        options: --health-cmd "mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 3
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: growi-slackbot-proxy

    steps:
    - uses: actions/checkout@v3.1.0

    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: '**/yarn.lock'

    - name: Remove unnecessary packages
      working-directory: ./packages
      run: |
        ls | egrep -v '^(slack|slackbot-proxy)$' | xargs rm -r
    - name: lerna bootstrap
      run: |
        npx lerna bootstrap
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --depth=0
    - name: lerna run build
      run: |
        yarn lerna run build
    - name: lerna bootstrap --production
      run: |
        npx lerna bootstrap -- --production
    - name: Print dependencies
      run: |
        echo -n "node " && node -v
        echo -n "npm " && npm -v
        yarn list --production --depth=0
    - name: yarn start:prod:ci
      working-directory: ./packages/slackbot-proxy
      run: |
        cp config/ci/.env.local.for-ci .env.production.local
        yarn start:prod:ci
      env:
        SERVER_URI: http://localhost:8080
        TYPEORM_CONNECTION: mysql
        TYPEORM_HOST: localhost
        TYPEORM_PORT: ${{ job.services.mysql.ports[3306] }}
        TYPEORM_DATABASE: growi-slackbot-proxy
        TYPEORM_USERNAME: root
        TYPEORM_PASSWORD:

    - name: Slack Notification
      uses: weseek/ghaction-slack-notification@master
      if: failure()
      with:
        type: ${{ job.status }}
        job_name: '*Node CI for growi-bot-proxy - launch-prod (${{ matrix.node-version }})*'
        channel: '#ci'
        isCompactMode: true
        url: ${{ secrets.SLACK_WEBHOOK_URL }}
